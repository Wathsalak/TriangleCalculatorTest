{
  "stats": {
    "suites": 2,
    "tests": 23,
    "passes": 20,
    "pending": 0,
    "failures": 3,
    "start": "2022-08-27T11:39:06.296Z",
    "end": "2022-08-27T11:39:09.253Z",
    "duration": 2957,
    "testsRegistered": 23,
    "passPercent": 86.95652173913044,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0da70d00-2775-431b-9636-a51d68f50a2c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
          "title": "Triangle Calculator POST endpoint test",
          "fullFile": "/Users/owner/WithSecure/TriangleCalculatorTest/test/triangle.test.js",
          "file": "/test/triangle.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate equilateral triangle status",
              "fullTitle": "Triangle Calculator POST endpoint test Validate equilateral triangle status",
              "timedOut": false,
              "duration": 222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "8a6ad014-6df8-4205-a360-3c0015fa3111",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate isosceles triangle status",
              "fullTitle": "Triangle Calculator POST endpoint test Validate isosceles triangle status",
              "timedOut": false,
              "duration": 139,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {
                "message": "AssertionError: expected 201 to equal 200",
                "estack": "AssertionError: expected 201 to equal 200\n    at _callee2$ (test/triangle.test.js:20:38)\n    at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:86:17)\n    at Generator._invoke (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:66:24)\n    at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:117:21)\n    at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)\n    at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:25:9)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- 201\n+ 200\n"
              },
              "uuid": "b445e594-ca8f-4000-80a3-0b764ec7fcff",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate versatile triangle status",
              "fullTitle": "Triangle Calculator POST endpoint test Validate versatile triangle status",
              "timedOut": false,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "78e11396-ea37-4c52-94c8-e5e9bda34452",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate equilateral triangle type identification result",
              "fullTitle": "Triangle Calculator POST endpoint test Validate equilateral triangle type identification result",
              "timedOut": false,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "b278c467-f6b7-41ff-8bf3-531b70adb558",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate isosceles triangle type identification result",
              "fullTitle": "Triangle Calculator POST endpoint test Validate isosceles triangle type identification result",
              "timedOut": false,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "571e10ed-1db6-49da-aba7-29cb968b465d",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate versatile triangle type identification result",
              "fullTitle": "Triangle Calculator POST endpoint test Validate versatile triangle type identification result",
              "timedOut": false,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "5e65d8f2-f667-4ed2-8e60-7b538e81958f",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate response when sum of any 2 sides less than the 3rd",
              "fullTitle": "Triangle Calculator POST endpoint test Validate response when sum of any 2 sides less than the 3rd",
              "timedOut": false,
              "duration": 120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "971423d9-b4d0-44b6-b610-624fce736134",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate POST method by passing special charactors as parameters",
              "fullTitle": "Triangle Calculator POST endpoint test Validate POST method by passing special charactors as parameters",
              "timedOut": false,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "232fd838-a18f-4d70-82a4-29fe57579866",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate POST method by passing string values as parameters",
              "fullTitle": "Triangle Calculator POST endpoint test Validate POST method by passing string values as parameters",
              "timedOut": false,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "0b0fb64f-f025-42a4-b252-38a33bff2ff6",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate POST method by passing negative values as parameters",
              "fullTitle": "Triangle Calculator POST endpoint test Validate POST method by passing negative values as parameters",
              "timedOut": false,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "3eb39b0d-9f10-4d8c-94c4-aa7888d1815d",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate POST method by passing only two sides",
              "fullTitle": "Triangle Calculator POST endpoint test Validate POST method by passing only two sides",
              "timedOut": false,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "7ce93f17-52c7-4c4f-865d-d761634fefcb",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate POST method by passing empty payload",
              "fullTitle": "Triangle Calculator POST endpoint test Validate POST method by passing empty payload",
              "timedOut": false,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "d48daae5-1809-4a8f-99aa-e2d4ee181c9b",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate POST method by passing different attributes",
              "fullTitle": "Triangle Calculator POST endpoint test Validate POST method by passing different attributes",
              "timedOut": false,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "31a319ee-4f73-4ffe-92c4-0e170b1a0cc7",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate triangle type identification using GET method",
              "fullTitle": "Triangle Calculator POST endpoint test Validate triangle type identification using GET method",
              "timedOut": false,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "d73fa75e-0d24-477c-9e5c-17d53ad26e3f",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate triangle type by passing large value",
              "fullTitle": "Triangle Calculator POST endpoint test Validate triangle type by passing large value",
              "timedOut": false,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "6bca084d-8bdc-4a3f-b1b8-a4a2817db45c",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate triangle type by passing float value",
              "fullTitle": "Triangle Calculator POST endpoint test Validate triangle type by passing float value",
              "timedOut": false,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "fd545d85-9ec4-40e1-b198-040eea4fe34e",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate triangle type without sending the payload",
              "fullTitle": "Triangle Calculator POST endpoint test Validate triangle type without sending the payload",
              "timedOut": false,
              "duration": 110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "d95dae61-ae21-4d7f-8ff3-41ce88d5dd5e",
              "parentUUID": "f4cb9ee9-a45b-4aef-ad08-37f12f259f0d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a6ad014-6df8-4205-a360-3c0015fa3111",
            "78e11396-ea37-4c52-94c8-e5e9bda34452",
            "b278c467-f6b7-41ff-8bf3-531b70adb558",
            "571e10ed-1db6-49da-aba7-29cb968b465d",
            "5e65d8f2-f667-4ed2-8e60-7b538e81958f",
            "971423d9-b4d0-44b6-b610-624fce736134",
            "232fd838-a18f-4d70-82a4-29fe57579866",
            "0b0fb64f-f025-42a4-b252-38a33bff2ff6",
            "3eb39b0d-9f10-4d8c-94c4-aa7888d1815d",
            "7ce93f17-52c7-4c4f-865d-d761634fefcb",
            "d48daae5-1809-4a8f-99aa-e2d4ee181c9b",
            "31a319ee-4f73-4ffe-92c4-0e170b1a0cc7",
            "d73fa75e-0d24-477c-9e5c-17d53ad26e3f",
            "6bca084d-8bdc-4a3f-b1b8-a4a2817db45c",
            "fd545d85-9ec4-40e1-b198-040eea4fe34e",
            "d95dae61-ae21-4d7f-8ff3-41ce88d5dd5e"
          ],
          "failures": [
            "b445e594-ca8f-4000-80a3-0b764ec7fcff"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2189,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "ecb7413a-1131-4837-8136-fe82a7061021",
          "title": "Triangle Calculator GET/version endpoint test",
          "fullFile": "/Users/owner/WithSecure/TriangleCalculatorTest/test/version.test.js",
          "file": "/test/version.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate status code of the GET/version endpoint",
              "fullTitle": "Triangle Calculator GET/version endpoint test Validate status code of the GET/version endpoint",
              "timedOut": false,
              "duration": 116,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {
                "message": "AssertionError: expected 400 to equal 200",
                "estack": "AssertionError: expected 400 to equal 200\n    at _callee$ (test/version.test.js:10:38)\n    at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:86:17)\n    at Generator._invoke (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:66:24)\n    at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:117:21)\n    at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)\n    at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:25:9)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- 400\n+ 200\n"
              },
              "uuid": "f565cc5e-5060-465b-8191-781437246c84",
              "parentUUID": "ecb7413a-1131-4837-8136-fe82a7061021",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate response message of the GET/version endpoint",
              "fullTitle": "Triangle Calculator GET/version endpoint test Validate response message of the GET/version endpoint",
              "timedOut": false,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "a167ae03-d671-4b56-9aea-77c3153ef892",
              "parentUUID": "ecb7413a-1131-4837-8136-fe82a7061021",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate data type of the GET/version response",
              "fullTitle": "Triangle Calculator GET/version endpoint test Validate data type of the GET/version response",
              "timedOut": false,
              "duration": 153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "45d64184-d05e-4d1f-8a55-a5479ec3fbf7",
              "parentUUID": "ecb7413a-1131-4837-8136-fe82a7061021",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate response type of the GET/version endpoint",
              "fullTitle": "Triangle Calculator GET/version endpoint test Validate response type of the GET/version endpoint",
              "timedOut": false,
              "duration": 112,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {
                "message": "AssertionError: expected 'application/json' to equal 'text/html'",
                "estack": "AssertionError: expected 'application/json' to equal 'text/html'\n    at _callee4$ (test/version.test.js:25:32)\n    at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:86:17)\n    at Generator._invoke (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:66:24)\n    at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:117:21)\n    at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)\n    at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:25:9)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- application/json\n+ text/html\n"
              },
              "uuid": "cc526b8a-5679-4b3b-9084-9a8120b41b01",
              "parentUUID": "ecb7413a-1131-4837-8136-fe82a7061021",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate version endpoint response using POST method",
              "fullTitle": "Triangle Calculator GET/version endpoint test Validate version endpoint response using POST method",
              "timedOut": false,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "49a3335d-4efa-4f4d-8ed4-87c95fe9d954",
              "parentUUID": "ecb7413a-1131-4837-8136-fe82a7061021",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate version endpoint response without defining the URN",
              "fullTitle": "Triangle Calculator GET/version endpoint test Validate version endpoint response without defining the URN",
              "timedOut": false,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
              "err": {},
              "uuid": "63c36023-58b2-4a9e-8395-8c594b08d1c3",
              "parentUUID": "ecb7413a-1131-4837-8136-fe82a7061021",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a167ae03-d671-4b56-9aea-77c3153ef892",
            "45d64184-d05e-4d1f-8a55-a5479ec3fbf7",
            "49a3335d-4efa-4f4d-8ed4-87c95fe9d954",
            "63c36023-58b2-4a9e-8395-8c594b08d1c3"
          ],
          "failures": [
            "f565cc5e-5060-465b-8191-781437246c84",
            "cc526b8a-5679-4b3b-9084-9a8120b41b01"
          ],
          "pending": [],
          "skipped": [],
          "duration": 730,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}